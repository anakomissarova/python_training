{
  "uid" : "b26e7880559ba25c",
  "name" : "test_edit_group_random_data[None: name LP=4<, header p>pPN,=Gm* NvQ\",sf, footer Bxk]",
  "fullName" : "tests.test_edit_group#test_edit_group_random_data",
  "historyId" : "e6a27af31a955e5c1111712f61b82561",
  "time" : {
    "start" : 1612797752424,
    "stop" : 1612797755104,
    "duration" : 2680
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [166: name 2,...xjd`NUMa, ...] == [166: name 2,...xjd`NUMa, ...]\n  At index 11 diff: 180: name LP=4<, header p>pPN,=Gm* NvQ\",sf, footer Bxk != 180: name LP=4, header p>pPN,=Gm* NvQ\",sf, footer Bxk\n  Use -v to get the full diff",
  "statusTrace" : "app = <fixture.application.Application object at 0x7f82b3dd00a0>\ndb = <fixture.db.DbFixture object at 0x7f82b3de8ac0>\ndata_random_groups = 180: name LP=4<, header p>pPN,=Gm* NvQ\",sf, footer Bxk\ncheck_ui = False\n\n    def test_edit_group_random_data(app, db, data_random_groups, check_ui):\n        if not app.group.count():\n            app.group.create(Group(name=\"tmp\"))\n        old_groups = db.get_groups_list()\n        new_group = data_random_groups\n        new_group.group_id = random.choice(old_groups).group_id\n        app.group.edit_group_by_id(new_group)\n        new_groups = db.get_groups_list()\n        for group in old_groups:\n            if group.group_id == new_group.group_id:\n                old_groups.remove(group)\n                break\n        old_groups.append(new_group)\n>       assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE       assert [166: name 2,...xjd`NUMa, ...] == [166: name 2,...xjd`NUMa, ...]\nE         At index 11 diff: 180: name LP=4<, header p>pPN,=Gm* NvQ\",sf, footer Bxk != 180: name LP=4, header p>pPN,=Gm* NvQ\",sf, footer Bxk\nE         Use -v to get the full diff\n\ntests/test_edit_group.py:37: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "app",
    "time" : {
      "start" : 1612797752301,
      "stop" : 1612797752420,
      "duration" : 119
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_ui",
    "time" : {
      "start" : 1612797752423,
      "stop" : 1612797752423,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "stop",
    "time" : {
      "start" : 1612797678481,
      "stop" : 1612797678481,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1612797678482,
      "stop" : 1612797678493,
      "duration" : 11
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "stop::0",
    "time" : {
      "start" : 1612797758228,
      "stop" : 1612797758904,
      "duration" : 676
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "db::fin",
    "time" : {
      "start" : 1612797758226,
      "stop" : 1612797758227,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_edit_group"
  }, {
    "name" : "host",
    "value" : "Mac-mini-Stanislav.local"
  }, {
    "name" : "thread",
    "value" : "4880-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_edit_group"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data_random_groups",
    "value" : "None: name LP=4<, header p>pPN,=Gm* NvQ\",sf, footer Bxk"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "202836f32e5b1b03",
        "reportUrl" : "nulljob/addressbook%20tests/13/allure/#testresult/202836f32e5b1b03",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert [166: name 2,...xjd`NUMa, ...] == [166: name 2,...xjd`NUMa, ...]\n  At index 11 diff: 180: name LP=4<, header p>pPN,=Gm* NvQ\",sf, footer Bxk != 180: name LP=4, header p>pPN,=Gm* NvQ\",sf, footer Bxk\n  Use -v to get the full diff",
        "time" : {
          "start" : 1612797752424,
          "stop" : 1612797755104,
          "duration" : 2680
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b26e7880559ba25c.json",
  "parameterValues" : [ "None: name LP=4<, header p>pPN,=Gm* NvQ\",sf, footer Bxk" ]
}